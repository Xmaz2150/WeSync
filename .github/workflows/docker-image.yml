name: Docker Image CI

on:
  push:
    branches: [ "master" ]
    paths:
      - 'backend/**'
      - 'frontend/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: [backend, frontend]
        include:
          - directory: backend
            dockerfile: .github/workflows/backend/Dockerfile
            image_name: zirahhh/wesync-backend
            version: '1.0'
            container_name: backend-container
          - directory: frontend
            dockerfile: .github/workflows/frontend/Dockerfile
            image_name: zirahhh/wesync-frontend
            version: '1.0'
            container_name: frontend-container

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image for backend
        if: contains(github.event.head_commit.message, 'backend/')
        run: |
          docker build . --file ${{ matrix.dockerfile }} --tag ${{ matrix.image_name }}:${{ matrix.version }}
          docker push ${{ matrix.image_name }}:${{ matrix.version }}

      - name: Build and push Docker image for frontend
        if: contains(github.event.head_commit.message, 'frontend/')
        run: |
          docker build . --file ${{ matrix.dockerfile }} --tag ${{ matrix.image_name }}:${{ matrix.version }}
          docker push ${{ matrix.image_name }}:${{ matrix.version }}

      - name: SSH into server and pull latest backend image
        if: matrix.directory == 'backend'
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            if [ "$(docker ps -q -f name=${{ matrix.container_name }})" ]; then
              echo "Stopping and removing running container: ${{ matrix.container_name }}"
              docker stop ${{ matrix.container_name }}
              docker rm ${{ matrix.container_name }}
            elif [ "$(docker ps -aq -f name=${{ matrix.container_name }})" ]; then
              echo "Removing non running container: ${{ matrix.container_name }}"
              docker rm ${{ matrix.container_name }}
            fi

            docker pull ${{ matrix.image_name }}:${{ matrix.version }}

            docker run -d --name ${{ matrix.container_name }} \
              -e WSYNC_PGSQL_USER=${{ secrets.WSYNC_PGSQL_USER }} \
              -e WSYNC_PGSQL_PWD=${{ secrets.WSYNC_PGSQL_PWD }} \
              -e WSYNC_PGSQL_HOST=${{ secrets.WSYNC_PGSQL_HOST }} \
              -e WSYNC_PGSQL_HOST_PORT=${{ secrets.WSYNC_PGSQL_HOST_PORT }} \
              -e WSYNC_ENV=${{ secrets.WSYNC_ENV }} \
              -e IS_SU=${{ secrets.IS_SU }} \
              -e SECRET_KEY=${{ secrets.SECRET_KEY }} \
              -e JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
              --add-host ${{ secrets.DB_HOST }} \
              -p 5000:5000 \
              ${{ matrix.image_name }}:${{ matrix.version }}

            docker image prune -a -f

      - name: SSH into server and pull latest frontend image
        if: matrix.directory == 'frontend'
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            if [ "$(docker ps -q -f name=${{ matrix.container_name }})" ]; then
              echo "Stopping and removing running container: ${{ matrix.container_name }}"
              docker stop ${{ matrix.container_name }}
              docker rm ${{ matrix.container_name }}
            elif [ "$(docker ps -aq -f name=${{ matrix.container_name }})" ]; then
              echo "Removing non running container: ${{ matrix.container_name }}"
              docker rm ${{ matrix.container_name }}
            fi

            docker pull ${{ matrix.image_name }}:${{ matrix.version }}

            docker run -d --name ${{ matrix.container_name }} \
              -p 3000:3000 \
              ${{ matrix.image_name }}:${{ matrix.version }}

            docker image prune -a -f